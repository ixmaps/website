Client side executables
-----------------------


tr-sub           -  GUI front-end program
                 -  invokes either tr-do or tr-parse to run a traceroute
                 -  gets sets of hostnames for tracing, and submits results
                    to the server at trgen.ixmaps.ca

tr-do            -  low-level traceroute program invoked by tr-sub
                 -  requires system privileges to run
                 -  uses the BSD socket derived API

tr-parse         -  low-level traceroute program invoked by tr-sub
                 -  Windows only, does not require system privileges
                 -  invokes the Windows tracert program and parses the output



Server side environment
-----------------------

Debian GNU/Linux 5.0 (Lenny)
apache2 web server
python 2.5 or greater
PostgreSQL v8.3 rdbms
PostGIS recommended
ruby recommended


Server side CGI (Common Gateway Interface) programs
---------------------------------------------------
These are deployed in the directory  /var/www/cgi-bin


gather-tr.cgi    -  accept traceroute data using the HTTP POST method
                 -  store the data into the traceroute and tr_item tables
                 -  return a status code in the body of the HTML response


tr-detail.cgi    -  allows browsing of traceroute results
                 -  four possible parameters in the query string
                    x  traceroute_id=N  reports on traceroute N
                    x  submitter=SUB    shows all traceroutes by submitter SUB
                    x  zip_code=ZIP     shows all traceroutes specified as being from ZIP
                    x  all_submitters   shows all submitters


tr-distance.cgi  -  allows selection of traceroutes by proximity of the closest hop
                    to a given carrier hotel or exchange point.
                 -  the user may specify a carrier hotel or enter a lat/long pair
                 -  possible parameters in the query string
                    x  ch_id=N       specify a carrier hotel by it's ID in chotel table
                    x  radius=X.Y    specify a radius value as a floating point number
                    x  rad_unit=U    specify radius units, one of m, mi, ft, or km (default)
                    x  pos_lat=X.Y   specify location coordinate by latitude
                    x  pos_long=X.Y  specify location coordinate by longitude


Other core server side executables
----------------------------------
With one exception, these are deployed in  /home/ixmaps/bin


asld             -  Autonomous System number Lookup Daemon
                 -  An IPv4 address prefix to ASnumber mapping file is parsed into
                    an internal data structure, then the program listens on a
                    UNIX-domain socket for resolution requests.
                 -  compiled from C++ source


arin_whois.py    -  Manages the whois lookup request lifecycle.  IP addresses belonging
                    to address ranges that are not already known are queued in the database.
                    A cron job is periodically run to submit outstanding requests to
                    the ARIN whois server and to parse the results.  The most specific
                    address range in a result is added to the known address range table
                    along with ownership information.


bgpdump          -  used by fetch-rib.sh to decode binary format BGP tables 
                 -  from the libbgpdump v1.4.99.11 package maintained by RIPE NCC


fetch-rib.sh     -  retrieves the beginning of UTC day RouteViews BGP snapshot
                    and generates the origin-AS file to be used by the asld program
                 -  replaces the use of the iPlane origin-AS data
                 -  can be run as a cron job (weekly)


mmdba            -  MaxMind database analyzer
                 -  The GeoLiteCity database file from MaxMind containing geolocation
                    data for IPv4 addresses is loaded and various lookup scenarios
                    for the data are supported, including individual IP address mapping
                    and full database dumping.  The program can operate in daemon mode,
                    listing on a UNIX-domain socket for resolution requests.
                 -  compiled from C++ source


mrt_split.py     -  splits the text output of the bgpdump program and outputs the
                    origin AS information


set_addr_info.py -  The primary purpose of set_addr_info.py  is to populate the fields
                    of the ip_addr_info table, when invoked with the -u flag.  For
                    each row of the ip_addr_info table that has a NULL entry in the
                    asnum field, all of the fields other than the ip_addr field are updated.


/etc/init.d/ixmaps - system initiation and shutdown script
                   starts and stops the asld and mmdba programs when required



Other non-core server side executables
--------------------------------------
These are deployed in the directory  /home/ixmaps/bin


import_ch.py     -  Import chotel and related tables from a spreadsheet into the database
                 -  the spreadsheet must have been saved in comma-separated format
                 -  to be deprecated

geoloc.py        -  test script for socket connection to mmdba

new_addr.py      -  transitional script to populate the ip_addr_info table
                 -  reference only, do not use

rename_null_submitters.py - cleanup script to rename all NULL submitter names in
                            the traceroute table to 'not@specified'

show_addr.py     - experimental script to show rows from the ip_addr_info table
                 - not always maintained


Server side library
-------------------

ixmaps.py        - Python library
                 - deployed in /home/ixmaps/bin 


Server side data sources
------------------------
The files (exclusive of the database) are deployed in  /home/ixmaps/ix-data


GeoLiteCity.dat  - downloadable near the beginning of each month from maxmind.com

rib.current.oas  - the latest origin-AS mapping file prepared by fetch-rib.sh

origin_as_mapping.txt - downloadable from iplane.cs.washington.edu (deprecated)


ixmaps database  - managed by PostgreSQL


